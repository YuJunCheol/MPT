package XMLConnecter;

import java.net.URLEncoder;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class Connecter extends OpenApi{
	//1000 °³¾¿ ÃÑ 29922¹ø
	OpenApi openapi = new OpenApi();
	public Connecter() {
		
	}
	
	public void setFoodData() {
		int i =1;
		openapi.OpenApi("I2790");
		for(int r = 0; r< 30; r++) {
			String url = openapi.geturlBuilder() + Integer.toString(i) + "/" + Integer.toString(i+1000);

			  DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
				DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
				Document xml = dBuilder.parse(url);
				
				
				Element root = xml.getDocumentElement();
		        NodeList nNodeList = root.getElementsByTagName("item");
		        
		        	
		        for(int temp = 0; temp < nNodeList.getLength() ;temp++) {
					Node nNode = nNodeList.item(temp);
					if(nNode.getNodeType() == Node.ELEMENT_NODE) {
						Element eElement = (Element)nNode;
						
						DESC_KOR = getTagValue("DESC_KOR",eElement);
						SERVING_WT = Integer.parseInt(Test(getTagValue("SERVING_WT",eElement)));
						NUTR_CONT1 = Float.parseFloat(Test(getTagValue("NUTR_CONT1",eElement)));
						NUTR_CONT2 = Float.parseFloat(Test(getTagValue("NUTR_CONT2",eElement)));
						NUTR_CONT3 = Float.parseFloat(Test(getTagValue("NUTR_CONT3",eElement)));
						NUTR_CONT4 = Float.parseFloat(Test(getTagValue("NUTR_CONT4",eElement)));
						NUTR_CONT5 = Float.parseFloat(FTest(getTagValue("NUTR_CONT5",eElement)));
						NUTR_CONT6 = Float.parseFloat(FTest(getTagValue("NUTR_CONT6",eElement)));
						NUTR_CONT7 = Float.parseFloat(FTest(getTagValue("NUTR_CONT7",eElement)));
						NUTR_CONT8 = Float.parseFloat(FTest(getTagValue("NUTR_CONT8",eElement)));
						NUTR_CONT9 =Integer.parseInt(Test(getTagValue("NUTR_CONT9",eElement)));
						BGN_YEAR =Integer.parseInt(Test(getTagValue("BGN_YEAR",eElement)));
						ANIMAL_PLANT = getTagValue("ANIMAL_PLANT",eElement);
						
						InsertDB insert = new InsertDB();
						insert.InsertADDFoodInfo(new Food(DESC_KOR,SERVING_WT,NUTR_CONT1,NUTR_CONT2,NUTR_CONT3,
								NUTR_CONT4,NUTR_CONT5,NUTR_CONT6,NUTR_CONT7,NUTR_CONT8,NUTR_CONT9,BGN_YEAR,
								ANIMAL_PLANT));
						//System.out.println(DESC_KOR);
					}
		        }
						

				}catch(Exception e) {
					
				}
			
			i = i+ 1001;
		}
		
		
	}
	
	
	
	private static String getTagValue(String sTag, Element eElement) {
		 NodeList nlList = eElement.getElementsByTagName(sTag).item(0).getChildNodes();
		 Node nValue = (Node)nlList.item(0);
		 if(nValue == null) {
			 return null;
		 }
		 return nValue.getNodeValue();
	}
	
	public String Test(String test) {
		if(test.equalsIgnoreCase("N/A")) {
			//System.out.println("null");
			return "0";
		}
		return test;
	}
	public String FTest(String test) {
		if(test.equalsIgnoreCase("N/A")) {
			//System.out.println("null");
			return "0.0";
		}
		return test;
	}
	public String STest(String test) {
		if(test == null) {
			return "ï¿½ë¾¾ï¿½ì“¬";
		}
		return test;
	}
	
}
